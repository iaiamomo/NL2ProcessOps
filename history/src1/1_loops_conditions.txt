C:\Users\flavi\Desktop\process_agents\src>python agent_memory.py
Enter your request: The process of calibration in a cardboard production consists of a continuous capturing of a photo of the produced cardboard until the number of markers is greater than 4. After this the process ends.


> Entering new AgentExecutor chain...
Here is the process model in Mermaid:

```mermaid
graph LR
A[Capture Image] --> B{Number of Markers > 4?}
B -- Yes --> C[End Process]
B -- No --> A
```

And here is the data flow specification:

```json
[
    {
        "task": "Capture Image",
        "tool": "capture_image",
        "input_parameters": {},
        "output_parameters": {
            "image_path": "string"
        }
    },
    {
        "task": "Number of Markers > 4?",
        "tool": "count_markers",
        "input_parameters": {
            "image_path": "string"
        },
        "output_parameters": {
            "count": "int"
        }
    },
    {
        "task": "End Process",
        "tool": "null",
        "input_parameters": {},
        "output_parameters": {}
    }
]
```

And here is the pseudocode to enact the process:

```
while True:
    image_path = capture_image()
    count = count_markers(image_path)
    if count > 4:
        break
```

If you would like to simulate the process, please let me know.

> Finished chain.
Enter your request: simulate the process


> Entering new AgentExecutor chain...

Invoking: `capture_image` with `{}`


path_to_image_17.png
Invoking: `count_markers` with `{'image_path': 'path_to_image_17.png'}`


4
Invoking: `capture_image` with `{}`


path_to_image_22.png
Invoking: `count_markers` with `{'image_path': 'path_to_image_22.png'}`


0
Invoking: `capture_image` with `{}`


path_to_image_90.png
Invoking: `count_markers` with `{'image_path': 'path_to_image_90.png'}`


9
Invoking: `capture_image` with `{}`


path_to_image_49.png
Invoking: `count_markers` with `{'image_path': 'path_to_image_49.png'}`


4
Invoking: `capture_image` with `{}`


path_to_image_77.png
Invoking: `count_markers` with `{'image_path': 'path_to_image_77.png'}`


7
Invoking: `capture_image` with `{}`


path_to_image_30.png
Invoking: `count_markers` with `{'image_path': 'path_to_image_30.png'}`


5
Invoking: `capture_image` with `{}`


path_to_image_78.png
Invoking: `count_markers` with `{'image_path': 'path_to_image_78.png'}`


8
Invoking: `capture_image` with `{}`


path_to_image_5.png

> Finished chain.