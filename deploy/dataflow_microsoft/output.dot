digraph  {
6 [label="1_\ import\ java\.util\.Iterator;", type_label=expression_statement];
12 [label="3_\ public\ class\ Code\ ", type_label=class_declaration];
16 [label="4_\ \ public\ static\ Iterator<Integer>\ comp\ \(\)", type_label=method_declaration];
25 [label="5_\ return\ new\ Iterator<Integer>\(\)\ ;", type_label=expression_statement];
33 [label="6_\ private\ int\ count\ =\ 0;", type_label=expression_statement];
39 [label="8_\ \ @Override\\n\ \ \ \ \ \ \ \ \ \ \ \ public\ boolean\ hasNext\ \(\)", type_label=method_declaration];
47 [label="10_\ return\ count\ <\ 5;", type_label=return];
51 [label="13_\ \ @Override\\n\ \ \ \ \ \ \ \ \ \ \ \ public\ Integer\ next\ \(\)", type_label=method_declaration];
59 [label="15_\ int\ x\ =\ count\+\+;", type_label=expression_statement];
65 [label="16_\ System\.out\.println\(x\);", type_label=expression_statement];
73 [label="17_\ return\ x;", type_label=return];
1 [label="1_\ start_node", type_label=start];
16 -> 25  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
25 -> 39  [color=red, controlflow_type=return_next, edge_type=CFG_edge, key=0, label=return_next];
39 -> 47  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
51 -> 59  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
59 -> 65  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
59 -> 65  [key=1, used_def=x];
59 -> 73  [key=0, used_def=x];
65 -> 73  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
1 -> 16  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
